package main

// #cgo LDFLAGS: -l urcrypt
// #include <stdlib.h>
// #include "../output/include/urcrypt.h"
import (
	"C"
)
import (
	"fmt"
	"unsafe"
)

func UrcryptEdShar(public, seed []byte) []byte {
	out := C.malloc(32)
	public1 := (*C.uint8_t)(C.CBytes(public))
	seed1 := (*C.uint8_t)(C.CBytes(public))

	C.urcrypt_ed_shar(public1, seed1, (*C.uint8_t)(out))

	out1 := C.GoBytes(out, 32)
	C.free(unsafe.Pointer(out))
	C.free(unsafe.Pointer(public1))
	C.free(unsafe.Pointer(seed1))
	return out1
}

func main() {
	r := UrcryptEdShar([]byte{12}, []byte{12})
	fmt.Println(r)
}
